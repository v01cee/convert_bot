"""
–ú–æ–¥—É–ª—å –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
"""

import os
import time
import logging
from pathlib import Path

logger = logging.getLogger(__name__)

def cleanup_temp_files(temp_dir: str = None, max_age_hours: int = 1):
    """
    –û—á–∏—â–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
    
    Args:
        temp_dir: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å–∏—Å—Ç–µ–º–Ω–∞—è)
        max_age_hours: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Ñ–∞–π–ª–æ–≤ –≤ —á–∞—Å–∞—Ö
    """
    if not temp_dir:
        temp_dir = os.path.join(os.path.dirname(__file__), 'temp')
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    os.makedirs(temp_dir, exist_ok=True)
    
    current_time = time.time()
    max_age_seconds = max_age_hours * 3600
    
    cleaned_count = 0
    total_size = 0
    
    try:
        for file_path in Path(temp_dir).glob('*'):
            if file_path.is_file():
                file_age = current_time - file_path.stat().st_mtime
                
                if file_age > max_age_seconds:
                    file_size = file_path.stat().st_size
                    total_size += file_size
                    
                    try:
                        file_path.unlink()
                        cleaned_count += 1
                        logger.info(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª: {file_path.name} ({file_size / 1024:.1f}KB)")
                    except Exception as e:
                        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª {file_path.name}: {e}")
        
        if cleaned_count > 0:
            logger.info(f"‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: —É–¥–∞–ª–µ–Ω–æ {cleaned_count} —Ñ–∞–π–ª–æ–≤, –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ {total_size / 1024:.1f}KB")
        else:
            logger.debug("üßπ –°—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {e}")

def cleanup_old_files():
    """–û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞"""
    cleanup_temp_files(max_age_hours=1)

def cleanup_very_old_files():
    """–û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 24 —á–∞—Å–æ–≤"""
    cleanup_temp_files(max_age_hours=24)

if __name__ == "__main__":
    # –¢–µ—Å—Ç–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞
    cleanup_temp_files()
